#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Attandance_Project
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Attandance_System")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAttandance_Record(Attandance_Record instance);
    partial void UpdateAttandance_Record(Attandance_Record instance);
    partial void DeleteAttandance_Record(Attandance_Record instance);
    partial void InsertRegistration(Registration instance);
    partial void UpdateRegistration(Registration instance);
    partial void DeleteRegistration(Registration instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Attandance_Project.Properties.Settings.Default.Attandance_SystemConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Attandance_Record> Attandance_Records
		{
			get
			{
				return this.GetTable<Attandance_Record>();
			}
		}
		
		public System.Data.Linq.Table<login> logins
		{
			get
			{
				return this.GetTable<login>();
			}
		}
		
		public System.Data.Linq.Table<Registration> Registrations
		{
			get
			{
				return this.GetTable<Registration>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Attandance_Record")]
	public partial class Attandance_Record : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Roll_No;
		
		private string _Name;
		
		private string _Date_Time;
		
		private string _Department;
		
		private string _Subject_Course;
		
		private string _Present;
		
		private string _Year;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnRoll_NoChanging(string value);
    partial void OnRoll_NoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDate_TimeChanging(string value);
    partial void OnDate_TimeChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    partial void OnSubject_CourseChanging(string value);
    partial void OnSubject_CourseChanged();
    partial void OnPresentChanging(string value);
    partial void OnPresentChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    #endregion
		
		public Attandance_Record()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Roll_No", DbType="VarChar(50)")]
		public string Roll_No
		{
			get
			{
				return this._Roll_No;
			}
			set
			{
				if ((this._Roll_No != value))
				{
					this.OnRoll_NoChanging(value);
					this.SendPropertyChanging();
					this._Roll_No = value;
					this.SendPropertyChanged("Roll_No");
					this.OnRoll_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Time", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Date_Time
		{
			get
			{
				return this._Date_Time;
			}
			set
			{
				if ((this._Date_Time != value))
				{
					this.OnDate_TimeChanging(value);
					this.SendPropertyChanging();
					this._Date_Time = value;
					this.SendPropertyChanged("Date_Time");
					this.OnDate_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="VarChar(50)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject_Course", DbType="VarChar(50)")]
		public string Subject_Course
		{
			get
			{
				return this._Subject_Course;
			}
			set
			{
				if ((this._Subject_Course != value))
				{
					this.OnSubject_CourseChanging(value);
					this.SendPropertyChanging();
					this._Subject_Course = value;
					this.SendPropertyChanged("Subject_Course");
					this.OnSubject_CourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Present", DbType="VarChar(50)")]
		public string Present
		{
			get
			{
				return this._Present;
			}
			set
			{
				if ((this._Present != value))
				{
					this.OnPresentChanging(value);
					this.SendPropertyChanging();
					this._Present = value;
					this.SendPropertyChanged("Present");
					this.OnPresentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="VarChar(50)")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.login")]
	public partial class login
	{
		
		private string _id;
		
		private string _User;
		
		private string _Password;
		
		public login()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(40)")]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[User]", Storage="_User", DbType="VarChar(50)")]
		public string User
		{
			get
			{
				return this._User;
			}
			set
			{
				if ((this._User != value))
				{
					this._User = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Registration")]
	public partial class Registration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Roll;
		
		private string _Name;
		
		private string _Father;
		
		private string _Gender;
		
		private string _Department;
		
		private string _Batch_Year;
		
		private string _Mobile;
		
		private string _Cnic;
		
		private string _Addresss;
		
		private string _Email;
		
		private string _Picture;
		
		private string _Date_Time;
		
		private string _Computer_code;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRollChanging(string value);
    partial void OnRollChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFatherChanging(string value);
    partial void OnFatherChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    partial void OnBatch_YearChanging(string value);
    partial void OnBatch_YearChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnCnicChanging(string value);
    partial void OnCnicChanged();
    partial void OnAddresssChanging(string value);
    partial void OnAddresssChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPictureChanging(string value);
    partial void OnPictureChanged();
    partial void OnDate_TimeChanging(string value);
    partial void OnDate_TimeChanged();
    partial void OnComputer_codeChanging(string value);
    partial void OnComputer_codeChanged();
    #endregion
		
		public Registration()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Roll", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Roll
		{
			get
			{
				return this._Roll;
			}
			set
			{
				if ((this._Roll != value))
				{
					this.OnRollChanging(value);
					this.SendPropertyChanging();
					this._Roll = value;
					this.SendPropertyChanged("Roll");
					this.OnRollChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(30)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Father", DbType="VarChar(30)")]
		public string Father
		{
			get
			{
				return this._Father;
			}
			set
			{
				if ((this._Father != value))
				{
					this.OnFatherChanging(value);
					this.SendPropertyChanging();
					this._Father = value;
					this.SendPropertyChanged("Father");
					this.OnFatherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(30)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="VarChar(30)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Batch_Year", DbType="VarChar(30)")]
		public string Batch_Year
		{
			get
			{
				return this._Batch_Year;
			}
			set
			{
				if ((this._Batch_Year != value))
				{
					this.OnBatch_YearChanging(value);
					this.SendPropertyChanging();
					this._Batch_Year = value;
					this.SendPropertyChanged("Batch_Year");
					this.OnBatch_YearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(30)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cnic", DbType="VarChar(30)")]
		public string Cnic
		{
			get
			{
				return this._Cnic;
			}
			set
			{
				if ((this._Cnic != value))
				{
					this.OnCnicChanging(value);
					this.SendPropertyChanging();
					this._Cnic = value;
					this.SendPropertyChanged("Cnic");
					this.OnCnicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addresss", DbType="VarChar(30)")]
		public string Addresss
		{
			get
			{
				return this._Addresss;
			}
			set
			{
				if ((this._Addresss != value))
				{
					this.OnAddresssChanging(value);
					this.SendPropertyChanging();
					this._Addresss = value;
					this.SendPropertyChanged("Addresss");
					this.OnAddresssChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(30)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="VarChar(200)")]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Time", DbType="VarChar(40)")]
		public string Date_Time
		{
			get
			{
				return this._Date_Time;
			}
			set
			{
				if ((this._Date_Time != value))
				{
					this.OnDate_TimeChanging(value);
					this.SendPropertyChanging();
					this._Date_Time = value;
					this.SendPropertyChanged("Date_Time");
					this.OnDate_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Computer_code", DbType="VarChar(40)")]
		public string Computer_code
		{
			get
			{
				return this._Computer_code;
			}
			set
			{
				if ((this._Computer_code != value))
				{
					this.OnComputer_codeChanging(value);
					this.SendPropertyChanging();
					this._Computer_code = value;
					this.SendPropertyChanged("Computer_code");
					this.OnComputer_codeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
